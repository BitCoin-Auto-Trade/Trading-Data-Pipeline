name: Deploy Trading Data Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Get current GitHub runner IP
        id: ip
        run: |
          echo "ip=$(curl -s ifconfig.me)" >> $GITHUB_OUTPUT

      - name: Allow GitHub IP on port 22
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.GETBITCOIN_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ip }}/32 \
            --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: SSH Deploy via systemd
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_GETBITCOIN_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -ex
            cd /home/ubuntu/Trading-Data-Pipeline

            # 최신 소스 받기
            git reset --hard
            git clean -fd
            git pull origin main --no-rebase

            # (필요하면 .env 파일 갱신)
            printf "%s" "${{ secrets.ENV }}" | base64 -d > .env

            # 패키지 업데이트
            /home/ubuntu/Trading-Data-Pipeline/venv/bin/pip install --upgrade pip
            /home/ubuntu/Trading-Data-Pipeline/venv/bin/pip install -r requirements.txt

            # systemd 서비스 재시작!
            sudo systemctl restart trading-scheduler

            echo "Deployment and systemd service restart complete."

      - name: Revoke GitHub IP from port 22
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.GETBITCOIN_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ip }}/32 \
            --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
