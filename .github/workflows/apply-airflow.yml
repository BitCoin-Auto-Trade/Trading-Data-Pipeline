name: Deploy Airflow

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get current GitHub runner IP
        id: ip
        run: |
          echo "ip=$(curl -s ifconfig.me)" >> $GITHUB_OUTPUT

      - name: Allow GitHub IP on port 22
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AIRFLOW_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ip }}/32 \
            --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: SSH Deploy Airflow
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_AIRFLOW_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -ex
            cd /home/ubuntu

            # clone or pull repo
            if [ ! -d "Trading-Data-Pipeline" ]; then
              git clone https://${{ secrets.TOKEN_FOR_REPO }}@github.com/BitCoin-Auto-Trade/Trading-Data-Pipeline.git
            fi
            cd Trading-Data-Pipeline
            git pull origin main

            # .env 생성 (줄바꿈 보존용)
            printf "%s\n" "${{ secrets.ENV }}" > .env

            # docker-compose 실행
            docker compose down || true
            docker compose up -d --build

      - name: Revoke GitHub IP from port 22
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AIRFLOW_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ip }}/32 \
            --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
